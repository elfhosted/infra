apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: debridmediamanager
  namespace: debridmediamanager
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: elfhosted
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: debridmediamanager
  values:
    global:
      nameOverride: debridmediamanager
    image:
      repository: ghcr.io/geek-cookbook/debrid-media-manager
      tag: rolling@sha256:e2adc62bf68b41be040a65d5cf50d6d789b7e71e24b2018f8a487369a98be493
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
    automountServiceAccountToken: false
    controller:
      replicas: 2
      strategy: RollingUpdate
      rollingUpdate:
        unavailable: 1
      annotations:
        configmap.reloader.stakater.com/reload: "debridmediamanager-env"
        secret.reloader.stakater.com/reload: "debridmediamanager-env"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution: 
        - weight: 100  
          podAffinityTerm:    
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - debridmediamanager
            topologyKey: "kubernetes.io/hostname"
    persistence:
      tmp: 
        enabled: true
        type: custom
        mountPath: /tmp
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: "topolvm-provisioner-thin"
                resources:
                  requests:
                    storage: 1Gi   
      cache:
        enabled: true
        type: custom
        mountPath: /app/.next/cache
        volumeSpec:
          persistentVolumeClaim:
            claimName: debridmediamanager     
      npm: 
        enabled: true
        type: custom
        mountPath: /.npm
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: "topolvm-provisioner-thin"
                resources:
                  requests:
                    storage: 1Gi                                 
      local: 
        enabled: true
        type: custom
        mountPath: /.local
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: "topolvm-provisioner-thin"
                resources:
                  requests:
                    storage: 1Gi                                            
    envFrom:
    - secretRef:
        name: debridmediamanager-env 
    - configMapRef:
        name: debridmediamanager-env 

    # resources:
    ingress:
      main:
        enabled: false
    service:
      main:
        enabled: true # necessary for probes
        ports:
          http:
            port: 3000
    addons:
      vpn:
        enabled: false # in case we ever need it
        gluetun:
          image:
            repository: thrnz/docker-wireguard-pia
            tag: latest
        envFrom:
        - secretRef:
            name: debridmediamanager-vpn
        env:
          IPTABLES_BACKEND: nft
          KILLSWITCH: "true"
          LOCAL_NETWORK: 10.2.0.0/15,10.43.0.0/16
          LOC: de-frankfurt
          PORT_FORWARDING: "0"
          PORT_PERSIST: "1"
          NFTABLES: "1"        
        securityContext:
          runAsUser: 0
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
        config: # We have to set this to null so that we can override with our own config             