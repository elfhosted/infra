apiVersion: v1
kind: ConfigMap
metadata:
  name: elf-cleaner
  namespace: elf-cleaner
data:
  elf-cleaner.sh: |
    #!/bin/bash

    # Debug logs
    # set -x

    set -o pipefail

    # Set timestamp
    TIMESTAMP_NOW=$(date +%s)

    NAMESPACES=$(kubectl get ns --no-headers=true | grep aa | grep -v fnky | cut -f1 -d" ")
    for NS in ${NAMESPACES}
    do

      # Get the tenant name from the namespace
      TENANT="${NS#aa-}"

      # Delete any orphaned deployments / needs automated label updates first
      # VERSION=$(kubectl get helmreleases.helm.toolkit.fluxcd.io -n $NS -o json | jq -r .items[0].status.lastAttemptedRevision)
      # echo "helmrelease current version is [$VERSION], deleting any unrelated deployments..."
      # kubectl delete deployments.apps -n $NS -l myprecious.elfhosted.com/version!=$VERSION,app.kubernetes.io/name!=kubernetesdashboard,app!=mattermost

      # Get a list of all customer PVCs excluding volsync or ephemeral ones (they'll have the tenant name in the PVC name)
      PVCS=$(kubectl get pvc -n $NS --no-headers=true | grep -E "config|symlinks|backup|logs" | grep -v volsync | grep -v $NS | cut -f1 -d' ')

      for PVC in ${PVCS}
      do
        # Is PVC currently bounh
        if (kubectl describe pvc -n ${NS} ${PVC} | grep -qE "Used By:.*<none>"); then

          kubectl label pvc -n $NS $PVC elfhosted.com/currently-unbound=true --overwrite

          # is it a topolvm pvc though?
          if (kubectl describe pvc -n ${NS} ${PVC} | grep -q 'topolvm-provisioner'); then


            # if so, then does the PVC already have a timestamp?
            if (kubectl describe pvc -n $NS $PVC | grep -q elfhosted.com/unused-since); then

              # if yes, and it's older than 31 days, then label for deletion
              TIMESTAMP_PVC=$(kubectl describe pvc -n $NS $PVC | grep elfhosted.com/unused-since | awk '{split($0,a); print a[3]}')
              TIMESTAMP_DIFF=$((TIMESTAMP_NOW-TIMESTAMP_PVC))
              if [[ $TIMESTAMP_DIFF -gt 86400 ]]; then # 86400 sec = 1 days
                echo "[$NS/$PVC] unused for > 1 days, deleting it (30s timeout).."
                kubectl delete pvc -n $NS $PVC --timeout=30s
              else
                echo "[$NS/$PVC] Found annotated, but it's less than 8d old, so ignoring"
              fi
            else
              # label for cleanup in 3 days
              echo "[$NS/$PVC] is unused, recording when it first became unused"
              kubectl annotate pvc -n $NS $PVC elfhosted.com/unused-since=$TIMESTAMP_NOW
            fi
          else
            echo "[$NS/$PVC] Volume is not topolvm-based, ignoring.."
          fi
        else
          echo "[$NS/$PVC] Volume is mounted, remove any existing annotations / labels"
          kubectl annotate pvc -n $NS $PVC elfhosted.com/unused-since- --overwrite
          kubectl label pvc -n $NS $PVC elfhosted.com/currently-unbound- --overwrite
          kubectl label pvc -n $NS $PVC elfhosted.com/unbound-and-older-than-1d- --overwrite
        fi
      done
    done
