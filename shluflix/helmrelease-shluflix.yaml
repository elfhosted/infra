apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: shluflix
  namespace: shluflix
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: elfhosted
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: shluflix
  values:
    global:
      nameOverride: shluflix
    image:
      repository: ghcr.io/elfhosted/shluflix
      tag: rolling@sha256:4880fe509752ee2f3fcef15561a8499c1e35057475d086299a62721b9e6426b3
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsUser: 10001
      runAsGroup: 10001
    automountServiceAccountToken: false
    controller:
      replicas: 2
      strategy: RollingUpdate
      rollingUpdate:
        unavailable: 1
    env:
      PORT: 3649
      TENANT_NAME: Public
    tolerations:
    - key: node-role.elfhosted.com/dedicated
      operator: Exists     
    - key: node-role.elfhosted.com/hobbit
      operator: Exists                   
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.elfhosted.com/dedicated
              operator: Exists   
        - weight: 100
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.elfhosted.com/hobbit
              operator: Exists                  
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution: 
        - weight: 100  
          podAffinityTerm:    
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - shluflix
            topologyKey: "kubernetes.io/hostname"   
    persistence:
      tmp: 
        enabled: true
        type: custom
        mountPath: /tmp
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: "topolvm-provisioner-thin"
                resources:
                  requests:
                    storage: 1Gi   
      npm: 
        enabled: true
        mountPath: /.npm
        type: emptyDir
        sizeLimit: 1Gi                                          

    # resources:
    ingress:
      main:
        enabled: false
    service:
      main:
        enabled: true # necessary for probes
        ports:
          http:
            port: 3649
