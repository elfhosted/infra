apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: stremio-ratings
  namespace: stremio-ratings
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: elfhosted
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: stremio-ratings
  values:
    global:
      nameOverride: stremio-ratings
    image:
      repository: ghcr.io/elfhosted/stremio-rating-addon
      tag: rolling@sha256:28db698c5b4ad1a8cf22f23adbef893ba0f5b32043e2d08ae2525a70e933160f
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      capabilities:
        drop:
        - ALL        
    automountServiceAccountToken: false
    controller:
      replicas: 2
      strategy: RollingUpdate
      annotations:
        configmap.reloader.stakater.com/reload: "stremio-ratings-env"
        secret.reloader.stakater.com/reload: "stremio-ratings-env"      
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution: 
        - weight: 100  
          podAffinityTerm:    
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - stremio-ratings
            topologyKey: "kubernetes.io/hostname"
    persistence:
      shared:
        enabled: true
        mountPath: /shared
        type: emptyDir
        volumeSpec:
          medium: Memory           
    resources:
      requests:
        cpu: 1m
        memory: 50Mi
        ephemeral-storage: 50Mi
      limits:
        cpu: 1
        memory: 1Gi
        ephemeral-storage: 100Mi        
    ingress:
      main:
        enabled: false
    service:
      main:
        enabled: true # necessary for probes
        ports:
          http:
            port: 3000
    envFrom:
    - secretRef:
        name: stremio-ratings-env 
    # - configMapRef:
    #     name: davio-env 
    initContainers:
      setup:
        image: ghcr.io/elfhosted/stremio-rating-addon:rolling@sha256:28db698c5b4ad1a8cf22f23adbef893ba0f5b32043e2d08ae2525a70e933160f
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          set -x
          set -e

          # the volume is empty
          if [ -z "$(ls -A /assets)" ]; then
            # Copy the baked-in DB into the volume
            cp //usr/src/app/assets/* /assets/   
          fi
        volumeMounts:        
        - mountPath: /assets
          name: assets    
    setup-warp:
      image: ghcr.io/elfhosted/tooling:focal-20240530@sha256:458d1f3b54e9455b5cdad3c341d6853a6fdd75ac3f1120931ca3c09ac4b588de
      imagePullPolicy: IfNotPresent
      command:
      - /bin/bash
      - -c
      - |
        set -x

        cd /shared

        # Create cloudflare account
        wgcf register --accept-tos

        # Create gluetun config
        wgcf generate -p /shared/wg0.conf

        # grab the values from the profile and put them into env vars for gluetun to consume
        echo "export WIREGUARD_PRIVATE_KEY=$(grep PrivateKey /shared/wg0.conf | cut -f3 -d' ')" > /shared/env
        echo "export WIREGUARD_PUBLIC_KEY=$(grep PublicKey /shared/wg0.conf | cut -f3 -d' ')" >> /shared/env
        echo "export WIREGUARD_ADDRESSES=$(grep Address /shared/wg0.conf | grep '/32' | cut -f3 -d' ')" >> /shared/env

        echo "export VPN_ENDPOINT_IP=$(dig +short dig +short engage.cloudflareclient.com)" >> /shared/env

      volumeMounts:
      - mountPath: /shared
        name: shared
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        readOnlyRootFilesystem: false     
  addons:
    vpn:
      enabled: true # in case we ever need it
      gluetun:
        image:
          repository: ghcr.io/elfhosted/gluetun
          tag: 3.39.0@sha256:198b5473cc2a48a3f38ab3a5d9e1316a6cc2b93f2b856c1cfc232713d03ce077
      env:
        IPTABLES_BACKEND: nft
        KILLSWITCH: "true"
        LOCAL_NETWORK: 10.0.0.0/8
        NFTABLES: "1"    
        VPNDNS: "0"            
        HTTP_CONTROL_SERVER_PORT: "8000"
        HTTP_CONTROL_SERVER_ADDRESS: ":8000"
        VPN_TYPE: wireguard
        VPN_SERVICE_PROVIDER: custom
        FIREWALL_INPUT_PORTS: "3000"
        WIREGUARD_MTU: "1280"
        VPN_ENDPOINT_PORT: "2408"
        DOT: "off"
      securityContext:
        runAsUser: 0
        capabilities:
          add:
            - NET_ADMIN
            - SYS_MODULE
      config: # We have to set this to null so that we can override with our own config
      volumeMounts:
      - mountPath: /shared
        name: shared          