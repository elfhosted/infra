apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana-agent-operator
  namespace: grafana-agent-operator
spec:
  chart:
    spec:
      chart: grafana-agent-operator
      version: 0.3.x
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: grafana-agent-operator
  values:
    # -- Overrides the chart's name
    nameOverride: ""

    # -- Overrides the chart's computed fullname
    fullnameOverride: ""

    # -- Annotations for the Deployment
    annotations: {}

    # -- Annotations for the Deployment Pods
    podAnnotations: {}

    # -- Annotations for the Deployment Pods
    podLabels: {}

    # -- Pod security context (runAsUser, etc.)
    podSecurityContext: {}

    # -- Container security context (allowPrivilegeEscalation, etc.)
    containerSecurityContext: {}

    rbac:
      # -- Toggle to create ClusterRole and ClusterRoleBinding
      create: true
      # -- Name of a PodSecurityPolicy to use in the ClusterRole. If unset, no PodSecurityPolicy is used.
      podSecurityPolicyName: ''

    serviceAccount:
      # -- Toggle to create ServiceAccount
      create: true
      # -- Service account name
      name:

    image:
      # -- Image registry
      registry: git.pterofractal.fractalems.com
      # -- Image repo
      repository: airbridger/agent-operator
      # -- Image tag
      # tag: v0.40.2
      # -- Image pull policy
      pullPolicy: IfNotPresent
      # -- Image pull secrets
      pullSecrets:
      - name: airbridger-registry-creds

    # -- hostAliases to add
    hostAliases: []
    #  - ip: 1.2.3.4
    #    hostnames:
    #      - domain.tld

    # -- If both are set, Agent Operator will create and maintain a service for scraping kubelets
    # https://grafana.com/docs/agent/latest/operator/getting-started/#monitor-kubelets
    kubeletService:
      namespace: pterofractal
      serviceName: kubelet

    # -- List of additional cli arguments to configure agent-operator (example: `--log.level`)
    extraArgs: []

    # -- Resource limits and requests config
    resources: {}

    # -- nodeSelector configuration
    nodeSelector: {}

    # -- Tolerations applied to Pods
    tolerations: []

    # -- Pod affinity configuration
    affinity: {}
