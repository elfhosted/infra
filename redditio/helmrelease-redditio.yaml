apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: redditio
  namespace: redditio
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: elfhosted
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: redditio
  values:
    global:
      nameOverride: redditio
    image:
      repository: ghcr.io/elfhosted/redditio
      tag: rolling@sha256:3e5514511b49fdf33cb28d4e21517e36decdcdf26b57416eafa6448830c9768e
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      capabilities:
        drop:
        - ALL        
    automountServiceAccountToken: false
    controller:
      replicas: 4
      strategy: Recreate
      annotations:
        configmap.reloader.stakater.com/reload: "redditio-env,redditio-env-dev-overrides"
        secret.reloader.stakater.com/reload: "redditio-env,redditio-env-dev-overrides"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution: 
        - weight: 100  
          podAffinityTerm:    
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - redditio
            topologyKey: "kubernetes.io/hostname"
    persistence:
      tmp: 
        enabled: true
        type: emptyDir
        mountPath: /tmp    
      deno:
        enabled: true
        type: custom
        mountPath: /deno
        volumeSpec:
          persistentVolumeClaim:
            claimName: redditio           
    resources:
      requests:
        cpu: 100m
        memory: 512Mi
        ephemeral-storage: 50Mi
      limits:
        cpu: 1 # never gets here because it's single-threaded
        memory: 4Gi
        ephemeral-storage: 1Gi        
    ingress:
      main:
        enabled: false
    service:
      main:
        enabled: true # necessary for probes
        ports:
          http:
            port: 7000
    probes:
      liveness:
        custom: true
        enabled: true
        spec:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10            
      readiness:
        custom: true
        enabled: true
        spec:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
      startup:
        custom: true
        enabled: true
        spec:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
    initContainers:
      setup:
        image: ghcr.io/elfhosted/redditio-server:rolling@sha256:19b2e86d12bf5526082d3e687d6d2af8ca18eebe8498955c56933e5179eda091
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          set -x
          set -e

          # the volume is empty
          if [ -z "$(ls -A /db)" ]; then
            # Copy the baked-in DB into the volume
            cp /app/db/* /db/   
          fi
        volumeMounts:        
        - mountPath: /db
          name: db
       