---
- name: ensure /etc/rancher/k3s exists
  file:
    path: /etc/rancher/k3s
    state: directory

- name: copy k3s config.yaml to /etc/rancher/k3s
  template:
    src: k3s-config.yaml.j2
    dest: /etc/rancher/k3s/config.yaml
  notify: restart k3s

- name: install k3s on master[0]
  environment: 
    INSTALL_K3S_EXEC: "server"
    INSTALL_K3S_CHANNEL: "{{ packages.k3s.version }}"
  shell: curl -sfL https://get.k3s.io |  sh -
  args:
    creates: /usr/local/bin/k3s    
  when: "groups['k3s_servers'][0] == inventory_hostname"

- name: get node token
  command: cat /var/lib/rancher/k3s/server/node-token
  register: node_token_result
  become: yes
  delegate_to: "{{ groups['k3s_servers'][0] }}"

- set_fact:
    node_token: "{{ node_token_result.stdout }}"
    master_ip: "{{ cluster_nic_class_c }}.{{ hostvars[groups['k3s_servers'][0]].ansible_host.split('.')[3] }}"

- name: install k3s on master[1-n]
  environment:
     K3S_URL: "https://{{ master_ip }}:6443"
     K3S_TOKEN: "{{ node_token }}"
     INSTALL_K3S_EXEC: "server"
     INSTALL_K3S_CHANNEL: "{{ packages.k3s.version }}"
  shell: curl -sfL https://get.k3s.io | sh -
  args:
    creates: /usr/local/bin/k3s
  when: "groups['k3s_servers'][0] != inventory_hostname"

- name: setup kubectl auto-completion
  lineinfile:
    path: /root/.bash_profile
    regexp: 'source <\(kubectl completion bash\)'
    line: source <(kubectl completion bash)
    create: yes
