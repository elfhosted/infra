---
# tasks file for k3s_agents

# - name: get node token
#   command: cat /var/lib/rancher/k3s/server/node-token
#   register: node_token_result
#   become: yes
#   delegate_to: "{{ groups['k3s_servers'][0] }}"

# - set_fact:
#     node_token: "{{ node_token_result.stdout }}"
#     master_ip: "{{ cluster_nic_class_c }}.{{ hostvars[groups['k3s_servers'][0]].ansible_host.split('.')[3] }}"

- name: ensure /etc/rancher/ exists
  file:
    path: /etc/rancher/k3s
    state: directory

- name: prepare kubelet extra args
  copy:
    src: kubelet-server.config
    dest: /etc/rancher/k3s/kubelet-server.config

- name: copy k3s config.yaml to /etc/rancher/k3s
  template:
    src: k3s-config.yaml.j2
    dest: /etc/rancher/k3s/config.yaml
  notify: restart k3s-agent  

- name: install k3s on contended nodes
  environment:
    K3S_URL: "https://{{ k8s_ha_api_ip }}:{{ k8s_ha_api_port }}"
    K3S_TOKEN: "{{ k3s_token }}"
    INSTALL_K3S_CHANNEL: "{{ packages.k3s.version }}"
  shell: >
    curl -sfL https://get.k3s.io | 
    INSTALL_K3S_EXEC="agent \
      --node-label node-role.elfhosted.com/contended=true" \
    sh -
  register: workers_install_result
  become: yes
  when: "inventory_hostname in groups['k3s_contended']" 

- name: install k3s on dedicated nodes
  environment:
    K3S_URL: "https://{{ k8s_ha_api_ip }}:{{ k8s_ha_api_port }}"
    K3S_TOKEN: "{{ k3s_token }}"
    INSTALL_K3S_CHANNEL: "{{ packages.k3s.version }}"
  shell: >
    curl -sfL https://get.k3s.io | 
    INSTALL_K3S_EXEC="agent \
      --node-label node-role.elfhosted.com/dedicated=true" \
    sh -
  register: workers_install_result
  become: yes
  when: "inventory_hostname in groups['k3s_dedicated']"   
