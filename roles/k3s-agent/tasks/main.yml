---
# tasks file for k3s_agents

# - name: get node token
#   command: cat /var/lib/rancher/k3s/server/node-token
#   register: node_token_result
#   become: yes
#   delegate_to: "{{ groups['k3s_servers'][0] }}"

# - set_fact:
#     node_token: "{{ node_token_result.stdout }}"
#     master_ip: "{{ cluster_nic_class_c }}.{{ hostvars[groups['k3s_servers'][0]].ansible_host.split('.')[3] }}"

- name: ensure /etc/rancher/ exists
  file:
    path: /etc/rancher/k3s
    state: directory

- name: prepare kubelet extra args
  copy:
    src: kubelet-server.config
    dest: /etc/rancher/k3s/kubelet-server.config

- name: install k3s on workers
  environment:
    K3S_URL: "https://{{ k8s_ha_api_ip }}:{{ k8s_ha_api_port }}"
    K3S_TOKEN: "{{ k3s_token }}"
    INSTALL_K3S_CHANNEL: "{{ packages.k3s.version }}"
  shell: >
    curl -sfL https://get.k3s.io | 
    INSTALL_K3S_EXEC="agent \
      --flannel-iface={{ cluster_nic }} \
      --kubelet-arg=config=/etc/rancher/k3s/kubelet-server.config \
      --node-label node-role.{{ dns_domain }}/tenant=true \
      --prefer-bundled-bin" \
    sh -
  # args:
    # creates: /usr/local/bin/k3s
  register: workers_install_result
  become: yes
  when: "inventory_hostname in groups['k3s_agents']"  

- name: install k3s on dwarves (tainted)
  environment:
    K3S_URL: "https://{{ k8s_ha_api_ip }}:{{ k8s_ha_api_port }}"
    K3S_TOKEN: "{{ k3s_token }}"
    INSTALL_K3S_CHANNEL: "{{ packages.k3s.version }}"
  shell: >
    curl -sfL https://get.k3s.io | 
    INSTALL_K3S_EXEC="agent \
      --flannel-iface={{ cluster_nic }} \
      --kubelet-arg=config=/etc/rancher/k3s/kubelet-server.config \
      --prefer-bundled-bin \
      --node-taint node-role.{{ dns_domain }}/storage=true:NoSchedule \
      --node-label node-role.{{ dns_domain }}/storage=true" \
    sh -
  # args:
    # creates: /usr/local/bin/k3s
  register: workers_install_result
  become: yes
  when: "inventory_hostname in groups['k3s_dwarves']"    

- name: taint and label download workers
  become: no
  shell: |
    kubectl label node {{ inventory_hostname_short }} node-role.{{ dns_domain }}/download=true --overwrite
    kubectl taint node {{ inventory_hostname_short }} node-role.{{ dns_domain }}/download=true:NoSchedule  --overwrite
  when: "inventory_hostname in groups['node_role_download']"  
  delegate_to: "{{ groups['controllers'][0] }}"

- name: label app workers
  become: no
  shell: kubectl label node {{ inventory_hostname_short }} node-role.{{ dns_domain }}/app=true
  when: "inventory_hostname in groups['node_role_app']"  
  delegate_to: "{{ groups['controllers'][0] }}"  