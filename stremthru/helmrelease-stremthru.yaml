apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: stremthru
  namespace: stremthru
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: elfhosted
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: stremthru
  values:
    global:
      nameOverride: stremthru
    image:
      repository: ghcr.io/elfhosted/stremthru
      tag: 0.20.0@sha256:4b974f5002c052e74128e4c5d60e33e66766c6453d80f22703ecd3ae679b9c92
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsUser: 10001
      runAsGroup: 10001
    automountServiceAccountToken: false
    affinity:      
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution: 
        - weight: 100  
          podAffinityTerm:    
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - stremthru
            topologyKey: "kubernetes.io/hostname"        
    controller:
      replicas: 2
      strategy: RollingUpdate
      rollingUpdate:
        unavailable: 1
      annotations:
        configmap.reloader.stakater.com/reload: "stremthru-env"
        secret.reloader.stakater.com/reload: "stremthru-env"        
    persistence:
      tmp: 
        enabled: true
        type: emptyDir
        mountPath: /tmp
      shared:
        enabled: true
        mountPath: /shared
        type: emptyDir
        volumeSpec:
          medium: Memory           
    resources:
    ingress:
      main:
        enabled: false
    service:
      main:
        enabled: true # necessary for probes
        ports:
          http:
            port: 8080
    envFrom:
    - secretRef:
        name: stremthru-env 
    - configMapRef:
        name: stremthru-env             
    initContainers:      
      setup-warp:
        image: ghcr.io/elfhosted/tooling:focal-20240530@sha256:458d1f3b54e9455b5cdad3c341d6853a6fdd75ac3f1120931ca3c09ac4b588de
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          set -x

          cd /shared

          # Create cloudflare account
          wgcf register --accept-tos

          # Create gluetun config
          wgcf generate -p /shared/wg0.conf

          # grab the values from the profile and put them into env vars for gluetun to consume
          echo "export WIREGUARD_PRIVATE_KEY=$(grep PrivateKey /shared/wg0.conf | cut -f3 -d' ')" > /shared/env
          echo "export WIREGUARD_PUBLIC_KEY=$(grep PublicKey /shared/wg0.conf | cut -f3 -d' ')" >> /shared/env
          echo "export WIREGUARD_ADDRESSES=$(grep Address /shared/wg0.conf | grep '/32' | cut -f3 -d' ')" >> /shared/env

          echo "export VPN_ENDPOINT_IP=$(dig +short dig +short engage.cloudflareclient.com)" >> /shared/env

        volumeMounts:
        - mountPath: /shared
          name: shared
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          readOnlyRootFilesystem: false    
    addons:
      vpn:
        enabled: true # in case we ever need it
        gluetun:
          image:
            repository: ghcr.io/elfhosted/gluetun
            tag: 3.40.0@sha256:2ce9c1407bad9897f4269b3c7f53862befb52a25c712731c91ae05906d41358f
        env:
          FIREWALL_OUTBOUND_SUBNETS: 10.0.0.0/8
          DNS_KEEP_NAMESERVER: "on"
          HTTP_CONTROL_SERVER_PORT: "8000"
          HTTP_CONTROL_SERVER_ADDRESS: ":8000"
          VPN_TYPE: wireguard
          VPN_SERVICE_PROVIDER: custom
          FIREWALL_INPUT_PORTS: "8080"
          WIREGUARD_MTU: "1280"
          VPN_ENDPOINT_PORT: "2408"
          DOT: "off"
        securityContext:
          runAsUser: 0
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
        config: # We have to set this to null so that we can override with our own config
        volumeMounts:
        - mountPath: /shared
          name: shared