apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: matrix-media-repo
  namespace: matrix
spec:
  chart:
    spec:
      chart: matrix-media-repo
      version: 2.x
      sourceRef:
        kind: HelmRepository
        name: anance-charts
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: matrix-media-repo
  values:
    ## Number of replicas for the media repo
    ##
    replicaCount: 1

    ## Image configuration for the media repo
    ##
    image:
      repository: turt2live/matrix-media-repo
      pullPolicy: IfNotPresent
      # tag: ""

    imagePullSecrets: []
    # nameOverride: ""
    # fullnameOverride: ""

    ## Global configuration.
    ## Ref: https://github.com/turt2live/matrix-media-repo/blob/master/config.sample.yaml
    ##
    config:
      datastores:
        - type: file
          id: "examplefile"
          forKinds: ["thumbnails", "remote_media", "local_media", "archives"]
          opts:
            path: /media
    #
    #   - type: s3
    #     id: "examples3"
    #     forKinds: ["all"]
    #     opts:
    #       tempPath: "/tmp/mediarepo_s3_upload"
    #       endpoint: sfo2.digitaloceanspaces.com
    #       accessKeyId: ""
    #       accessSecret: ""
    #       ssl: true
    #       bucketName: "your-media-bucket"
    #       region: "sfo2"
    #
    # admins:
    #   - "@user:example.org"
    #
    # featureSupport:
    #   MSC2448:
    #     enabled: true
    # sentry:
    #   enabled: true
    #   dsn: "https://examplekey@ingest.sentry.io/0"

    ## For setting extra parameters on the repo block, separated to avoid breaking
    ## the defaults when merging multiple configurations.
    ## Ref: https://github.com/turt2live/matrix-media-repo/blob/master/config.sample.yaml#L1-L22
    ##
    extraRepo: {}
    #  useForwardedHost: false

    extraVolumes: []

    extraVolumeMounts: []

    ## Per-domain configuration.
    ## Ref: https://github.com/turt2live/matrix-media-repo/blob/master/docs/config.md
    ##
    homeservers: {}
    # example.org:
    #   csApi: 'https://example.org'
    #   backoffAt: 10
    #   adminApiKind: 'matrix'
    #   identicons:
    #     enabled: false

    ## Media persistence, mounted in the pod as /media.
    ## Can be disabled if no datastore uses it.
    ##
    persistence:
      enabled: true

      # existingClaim: matrix-media-repo
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 16Gi


    ## This configuration is for setting up the internally provided Postgres server,
    ## if you instead want to use an existing server, then you may want to set
    ## enabled to false and configure the externalPostgresql block.
    ##
    postgresql:
      enabled: true

      auth:
        username: matrix_media_repo
        database: matrix_media_repo

      persistence:
        size: 16G

    ## An externally configured Postgres server.
    ##
    externalPostgresql:
      # host: postgres
      port: 5432
      username: matrix_media_repo
      # password:
      database: matrix_media_repo
      # sslMode: require

    redis:
      enabled: false

      auth:
        enabled: true
        # XXX Change me!
        password: media-repo

      architecture: standalone
      master:
        persistence:
          ## Note that Synapse only uses redis as a synchronization utility, so no
          ## data will ever need to be persisted.
          ##
          enabled: false
        service:
          port: 6379
        statefulset:
          updateStrategy: RollingUpdate

    ## An externally configured Redis server to use for workers/sharding.
    ##
    externalRedis:
      # host: redis
      port: 6379
      # password: media-repo
      # database: 0

      ## The name of an existing secret with redis credentials
      # existingSecret: redis-secrets

      ## Password key to be retrieved from existing secret
      # existingSecretPasswordKey: redis-password

    ## Configures an application-specific service account.
    ##
    serviceAccount:
      create: false

      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    ## Additional annotations to add to the pod.
    ##
    podAnnotations: {}

    ## Security context configuration to add to the pod.
    ##
    podSecurityContext: {}
      # fsGroup: 2000

    ## Security context configuration to add to the container inside the pod.
    ##
    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    ## Service configuration.
    ##
    service:
      type: ClusterIP
      port: 80
      annotations: {}

    ## Ingress configuration.
    ##
    ingress:
      enabled: false
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: chart-example.local
          paths: []
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

      ## Set the name of the IngressClass cluster resource (optional)
      ## https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec
      # className: can-be-anything

    ## Resource configuration for the application.
    ##
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 512Mi
      # requests:
      #   cpu: 250m
      #   memory: 512Mi

    ## Configure auto-scaling for the application.
    ## NB; Make sure to read all relevant documentation before playing with this.
    ##
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    ## Configure a PodMonitor definition for the application.
    ## Requires the Prometheus Operator
    ##
    podmonitor:
      enabled: false
      ## Set the crawl interval (optional)
      ## Otherwise uses the default setting set in prometheus
      # interval: 30s

    ## Node selectors to use when deploying the application.
    ##
    nodeSelector: {}

    ## Tolerations to apply to the application.
    ##
    tolerations: []

    ## Affinities to set on the application.
    ##
    affinity: {}

    ## Deployment annotations
    ##
    annotations: {}

    ## Deployment labels
    ##
    labels: {}
