apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: matrix-media-repo
  namespace: matrix
spec:
  chart:
    spec:
      chart: matrix-media-repo
      version: 2.x
      sourceRef:
        kind: HelmRepository
        name: anance-charts
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: matrix-media-repo
  values:
    ## Number of replicas for the media repo
    ##
    replicaCount: 1

    ## Image configuration for the media repo
    ##
    image:
      repository: turt2live/matrix-media-repo
      pullPolicy: IfNotPresent
      # tag: ""

    imagePullSecrets: []
    # nameOverride: ""
    # fullnameOverride: ""

    ## Global configuration.
    ## Ref: https://github.com/turt2live/matrix-media-repo/blob/master/config.sample.yaml
    ##
    config:
      datastores:
        # - type: file
        #   enabled: true
        #   forKinds: ["thumbnails", "remote_media", "local_media", "archives"]
        #   opts:
        #     path: /media
    #
      - type: s3
        enabled: true
        forKinds: ["thumbnails", "remote_media", "local_media", "archives"]
        opts:
          tempPath: "/tmp/mediarepo_s3_upload"
          endpoint: s3.us-west-000.backblazeb2.com 
          accessKeyId: "0003ad36d0c55cd000000000c"
          accessSecret: "K000qVR1gHddi0t2BBX9lrLuIRc4CF0"
          ssl: true
          bucketName: "m-fnky-nz"
          region: "sfo2"

      thumbnails:
        # The maximum number of bytes an image can be before the thumbnailer refuses.
        maxSourceBytes: 10485760 # 10MB default, 0 to disable

        # The maximum number of pixels an image can have before the thumbnailer refuses. Note that
        # this only applies to image types: file types like audio and video are affected solely by
        # the maxSourceBytes.
        maxPixels: 32000000 # 32M default

        # The number of workers to use when generating thumbnails. Raise this number if thumbnails
        # are slow to generate or timing out.
        #
        # Maximum memory usage = numWorkers multiplied by the maximum image source size
        # Average memory usage is dependent on how many thumbnails are being generated by your users
        numWorkers: 100

        # All thumbnails are generated into one of the sizes listed here. The first size is used as
        # the default for when no width or height is requested. The media repository will return
        # either an exact match or the next largest size of thumbnail.
        sizes:
          - width: 32
            height: 32
          - width: 80
            height: 80
          - width: 96
            height: 96
          - width: 320
            height: 240
          - width: 640
            height: 480
          - width: 768   # This size is primarily used for audio thumbnailing.
            height: 240
          - width: 800
            height: 600

        # To allow for thumbnails to be any size, not just in the sizes specified above, set this to
        # true (default false). When enabled, whatever size requested by the client will be generated
        # up to a maximum of the largest possible dimensions in the `sizes` list. For best results,
        # specify only one size in the `sizes` list when this option is enabled.
        dynamicSizing: false

        # The content types to thumbnail when requested. Types that are not supported by the media repo
        # will not be thumbnailed (adding application/json here won't work). Clients may still not request
        # thumbnails for these types - this won't make clients automatically thumbnail these file types.
        types:
          - "image/jpeg"
          - "image/jpg"
          - "image/png"
          - "image/apng"
          - "image/gif"
          - "image/heif"
          - "image/webp"
          #- "image/svg+xml" # Be sure to have ImageMagick installed to thumbnail SVG files
          - "audio/mpeg"
          - "audio/ogg"
          - "audio/wav"
          - "audio/flac"
          #- "video/mp4" # Be sure to have ffmpeg installed to thumbnail video files

        # Animated thumbnails can be CPU intensive to generate. To disable the generation of animated
        # thumbnails, set this to false. If disabled, regular thumbnails will be returned.
        allowAnimated: true

        # Default to animated thumbnails, if available
        defaultAnimated: false

        # The maximum file size to thumbnail when a capable animated thumbnail is requested. If the image
        # is larger than this, the thumbnail will be generated as a static image.
        maxAnimateSizeBytes: 10485760 # 10MB default, 0 to disable

        # On a scale of 0 (start of animation) to 1 (end of animation), where should the thumbnailer try
        # and thumbnail animated content? Defaults to 0.5 (middle of animation).
        stillFrame: 0.5

        # How many days after a thumbnail is generated before it expires and is deleted. The thumbnail
        # can be regenerated safely - this just helps free up some space in your datastores. Set to
        # zero or negative to disable. Defaults to disabled.
        expireAfterDays: 0

    #
    admins:
      - "@funkypenguin:matrix.funkypenguin.co.nz"
    
    # featureSupport:
    #   MSC2448:
    #     enabled: true
    # sentry:
    #   enabled: true
    #   dsn: "https://examplekey@ingest.sentry.io/0"

    ## For setting extra parameters on the repo block, separated to avoid breaking
    ## the defaults when merging multiple configurations.
    ## Ref: https://github.com/turt2live/matrix-media-repo/blob/master/config.sample.yaml#L1-L22
    ##
    extraRepo: {}
    #  useForwardedHost: false

    extraVolumes: []

    extraVolumeMounts: []

    ## Per-domain configuration.
    ## Ref: https://github.com/turt2live/matrix-media-repo/blob/master/docs/config.md
    ##
    homeservers:
      matrix.funkypenguin.co.nz:
        csApi: 'https://matrix.funkypenguin.co.nz'
        backoffAt: 10
        adminApiKind: 'matrix'
        identicons:
          enabled: false

    ## Media persistence, mounted in the pod as /media.
    ## Can be disabled if no datastore uses it.
    ##
    persistence:
      enabled: false

      # existingClaim: matrix-media-repo
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 16Gi


    ## This configuration is for setting up the internally provided Postgres server,
    ## if you instead want to use an existing server, then you may want to set
    ## enabled to false and configure the externalPostgresql block.
    ##
    postgresql:
      enabled: false

      auth:
        password: 83a3otuhdetihe@eux
        username: matrix_media_repo
        database: matrix_media_repo

      persistence:
        size: 1G

      sslMode: disable
    ## An externally configured Postgres server.
    ##
    externalPostgresql:
      host: matrix-synapse-postgresql
      port: 5432
      username: synapse
      password: synapse
      database: matrix_media_repo # same credentials but different database
      sslMode: disable

    redis:
      enabled: false

      auth:
        enabled: true
        # XXX Change me!
        password: media-repo

      architecture: standalone
      master:
        persistence:
          ## Note that Synapse only uses redis as a synchronization utility, so no
          ## data will ever need to be persisted.
          ##
          enabled: false
        service:
          port: 6379
        statefulset:
          updateStrategy: RollingUpdate

    ## An externally configured Redis server to use for workers/sharding.
    ##
    externalRedis:
      # host: redis
      port: 6379
      # password: media-repo
      # database: 0

      ## The name of an existing secret with redis credentials
      #existingSecret: redis-secrets

      ## Password key to be retrieved from existing secret
      #existingSecretPasswordKey: redis-password

    ## Configures an application-specific service account.
    ##
    serviceAccount:
      create: true

      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    ## Additional annotations to add to the pod.
    ##
    podAnnotations: {}

    ## Security context configuration to add to the pod.
    ##
    podSecurityContext: {}
      # fsGroup: 2000

    ## Security context configuration to add to the container inside the pod.
    ##
    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    ## Service configuration.
    ##
    service:
      type: ClusterIP
      port: 80

    ## Ingress configuration.
    ##
    ingress:
      enabled: true
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: matrix.funkypenguin.co.nz
          paths:
          - /_matrix/media

      tls:
        - secretName: letsencrypt-wildcard-cert
          hosts:
            - matrix.funkypenguin.co.nz

      ## Set the name of the IngressClass cluster resource (optional)
      ## https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec
      className: traefik

    ## Resource configuration for the application.
    ##
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 512Mi
      # requests:
      #   cpu: 250m
      #   memory: 512Mi

    ## Configure auto-scaling for the application.
    ## NB; Make sure to read all relevant documentation before playing with this.
    ##
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    ## Node selectors to use when deploying the application.
    ##
    nodeSelector: {}

    ## Tolerations to apply to the application.
    ##
    tolerations: []

    ## Affinities to set on the application.
    ##
    affinity: {}

    ## Deployment annotations
    ##
    annotations: {}

    ## Deployment labels
    ##
    labels: {}