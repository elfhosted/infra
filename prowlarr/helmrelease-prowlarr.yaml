apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: prowlarr
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: elfhosted
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: prowlarr
  values:
    global:
      nameOverride: prowlarr
    image:
      repository: ghcr.io/elfhosted/prowlarr-nightly
      tag: 1.20.0.4587
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsUser: 568
      runAsGroup: 568
    automountServiceAccountToken: false
    controller:
      replicas: 5
      annotations:
        configmap.reloader.stakater.com/reload: "prowlarr-env"
        secret.reloader.stakater.com/reload: "prowlarr-env"
    persistence:
      tmp: 
        enabled: true
        type: custom
        mountPath: /tmp
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              metadata:
                labels:
                  velero.io/exclude-from-backup: "true"              
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: "topolvm-provisioner-thin"
                resources:
                  requests:
                    storage: 1Gi   
      config:
        enabled: true
        type: custom
        mountPath: /config
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              metadata:
                labels:
                  velero.io/exclude-from-backup: "true"         
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: "topolvm-provisioner-thin"
                resources:
                  requests:
                    storage: 10Gi         
      run: # used for s6-init with non-root
        enabled: true
        type: emptyDir
        mountPath: /run
        sizeLimit: 1Gi                                       
    envFrom:
    - secretRef:
        name: prowlarr-env
    # resources:
    ingress:
      main:
        enabled: false 
    service:
      main:
        enabled: true # necessary for probes
        ports:
          http:
            port: 9696
    probeSelector:
      liveness:
        # -- Enable the liveness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own livenessProbe
        custom: true
        # -- The spec field contains the values for the default livenessProbe.
        # If you selected `custom: true`, this field holds the definition of the livenessProbe.
        # @default -- See below
        spec:
          exec:
            command:
              - sh
              - -c
              - 'curl -H "X-API-KEY: $PROWLARR_API_KEY" http://localhost:9696/api/v1/health'
          initialDelaySeconds: 60
          periodSeconds: 60
          failureThreshold: 5
          timeoutSeconds: 10
    initContainers:
      config-setup:
        image: curlimages/curl:latest
        command: ["/bin/sh", "-c"]
        args:
          - >
            set -x;
            until curl -o /config/init-container.sh https://raw.githubusercontent.com/mhdzumair/prowlarr/main/deployment/k8s/init-container.sh; do
              echo "Failed to download script file. Retrying...";
              sleep 3;
            done;
            chmod +x /config/init-container.sh;
            /config/init-container.sh
        volumeMounts:
          - name: config
            mountPath: /config
        env:
          - name: PROWLARR_API_KEY
            valueFrom:
              secretKeyRef:
                name: prowlarr-env
                key: PROWLARR_API_KEY   
          - name: FLARESOLVERR_HOST
            value: "http://flaresolverr:8191/"                             
    additionalContainers:
      setup-indexers: 
        image: apteno/alpine-jq:latest
        command: ["/bin/sh", "-c"]
        args:
          - >
            until curl -o /config/sidecar-config.sh https://raw.githubusercontent.com/mhdzumair/prowlarr/main/deployment/k8s/sidecar-config.sh; do
              echo "Failed to download script file. Retrying...";
              sleep 3;
            done;
            chmod +x /config/sidecar-config.sh;
            /config/sidecar-config.sh
        volumeMounts:
          - name: config
            mountPath: /config            
        env:
          - name: PROWLARR_API_KEY
            valueFrom:
              secretKeyRef:
                name: prowlarr-env
                key: PROWLARR_API_KEY
          - name: FLARESOLVERR_HOST
            value: "http://flaresolverr:8191/"                
    addons:
      vpn:
        enabled: true # in case we ever need it
        gluetun:
          image:
            repository: thrnz/docker-wireguard-pia
            tag: latest
        envFrom:
        - secretRef:
            name: prowlarr-vpn
        env:
          IPTABLES_BACKEND: nft
          KILLSWITCH: "true"
          LOCAL_NETWORK: 10.2.0.0/15,10.43.0.0/16
          LOC: de-frankfurt
          PORT_FORWARDING: "0"
          PORT_PERSIST: "1"
          NFTABLES: "1"       
          VPNDNS: "0" 
        securityContext:
          runAsUser: 0
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
        config: # We have to set this to null so that we can override with our own config                   