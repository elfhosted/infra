apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: comet
  namespace: comet
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: elfhosted
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: comet
  values:
    global:
      nameOverride: comet
    image:
      repository: ghcr.io/elfhosted/comet
      tag: v2.10.0@sha256:e59c6edf6a8a33313a8b785505b5caf3d516f573346a9bfd3d95a966eb8c3086
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
    affinity:                  
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution: 
        - weight: 100  
          podAffinityTerm:    
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - comet
            topologyKey: "kubernetes.io/hostname"              
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
    automountServiceAccountToken: false
    resources:
      requests:
        cpu: 100m
        memory: 50Mi
      limits:
        cpu: 1
        memory: 3Gi
    controller:
      replicas: 10
      strategy: RollingUpdate
      rollingUpdate:
        unavailable: 1
      annotations:
        configmap.reloader.stakater.com/reload: "comet-env"
        secret.reloader.stakater.com/reload: "comet-env"     
    envFrom:
    - configMapRef:
        name: comet-env
    - secretRef:
        name: comet-env
    ingress:
      main:
        enabled: false 
    service:
      main:
        enabled: true # necessary for probes
        ports:
          http:
            port: 8000   
    persistence:
      cache: 
        enabled: true
        type: emptyDir
        mountPath: /.cache    
      tmp:
        enabled: true
        mountPath: /tmp
        type: emptyDir
        volumeSpec:
          medium: Memory    
      shared:
        enabled: true
        type: emptyDir
        volumeSpec:
          medium: Memory               
      jackett-config:
        enabled: true
        type: emptyDir  
      jackett-bootstrap:
        enabled: "true"
        type: "custom"
        volumeSpec:
          configMap:
            name: jackett-config
    probes:
      liveness:
        custom: true
        enabled: true
        spec:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
      readiness:
        custom: true
        enabled: true
        spec:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
      startup:
        custom: true
        enabled: true
        spec:
          failureThreshold: 30
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10                 
    additionalContainers:
      jackett:
        image: ghcr.io/elfhosted/jackett:0.22.2219
        volumeMounts:
        - name: jackett-config
          mountPath: /config/
        resources:
          requests:
            cpu: 500m
            memory: 50Mi
          limits:
            cpu: 1
            memory: 3Gi          
    initContainers:
      setup-jackett:
        image: ghcr.io/elfhosted/tooling:focal-20240530@sha256:458d1f3b54e9455b5cdad3c341d6853a6fdd75ac3f1120931ca3c09ac4b588de
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          set -x

          mkdir -p /config/Jackett/Indexers
          cp -rf --dereference /bootstrap/*.json /config/Jackett/Indexers/
          mv /config/Jackett/Indexers/ServerConfig.json /config/Jackett/

        volumeMounts:
        - mountPath: /config
          name: jackett-config
        - mountPath: /bootstrap
          name: jackett-bootstrap
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          readOnlyRootFilesystem: false      
      setup-warp:
        image: ghcr.io/elfhosted/tooling:focal-20240530@sha256:458d1f3b54e9455b5cdad3c341d6853a6fdd75ac3f1120931ca3c09ac4b588de
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          set -x

          cd /shared

          # Create cloudflare account
          wgcf register --accept-tos

          # Create gluetun config
          wgcf generate -p /shared/wg0.conf

          # grab the values from the profile and put them into env vars for gluetun to consume
          echo "export WIREGUARD_PRIVATE_KEY=$(grep PrivateKey /shared/wg0.conf | cut -f3 -d' ')" > /shared/env
          echo "export WIREGUARD_PUBLIC_KEY=$(grep PublicKey /shared/wg0.conf | cut -f3 -d' ')" >> /shared/env
          echo "export WIREGUARD_ADDRESSES=$(grep Address /shared/wg0.conf | grep '/32' | cut -f3 -d' ')" >> /shared/env

          echo "export VPN_ENDPOINT_IP=$(dig +short dig +short engage.cloudflareclient.com)" >> /shared/env

        volumeMounts:
        - mountPath: /shared
          name: shared
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          readOnlyRootFilesystem: false                 
    addons:
      vpn:
        enabled: true # in case we ever need it
        gluetun:
          image:
            repository: ghcr.io/elfhosted/gluetun
            tag: 3.40.0@sha256:59b0cc8a9412b9a4645d1f12dff0daba80b8be88acd1b5d1a0fb6dfa625eb9a5
        env:
          FIREWALL_OUTBOUND_SUBNETS: 10.0.0.0/8
          DNS_KEEP_NAMESERVER: "on"
          HTTP_CONTROL_SERVER_PORT: "8001"
          HTTP_CONTROL_SERVER_ADDRESS: ":8001"
          VPN_TYPE: wireguard
          VPN_SERVICE_PROVIDER: custom
          FIREWALL_INPUT_PORTS: "8000"
          WIREGUARD_MTU: "1280"
          VPN_ENDPOINT_PORT: "2408"
          DOT: "off"
        securityContext:
          runAsUser: 0
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
        config: # We have to set this to null so that we can override with our own config
        volumeMounts:
        - mountPath: /shared
          name: shared