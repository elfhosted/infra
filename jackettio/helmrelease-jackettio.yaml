apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jackettio
  namespace: jackettio
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: elfhosted
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: jackettio
  values:
    global:
      nameOverride: jackettio
    image:
      repository: ghcr.io/elfhosted/jackettio
      tag: rolling@sha256:6bff317e8c7eb286cf53a8e1740a9b06092e2d3536f80168c728bfeb04a54289
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      allowPrivilegeEscalation: false
      runAsNonRoot: false # can't use VPN with this enabled
      capabilities:
        drop:
        - ALL        
    automountServiceAccountToken: false
    controller:
      replicas: 1
      strategy: Recreate
      annotations:
        configmap.reloader.stakater.com/reload: "jackettio-env"
        secret.reloader.stakater.com/reload: "jackettio-env"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution: 
        - weight: 100  
          podAffinityTerm:    
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - jackettio
            topologyKey: "kubernetes.io/hostname"
    persistence:
      config:
        enabled: true
        type: custom
        mountPath: /config/
        volumeSpec:
          persistentVolumeClaim:
            claimName: jackettio
      tmp: 
        enabled: true
        type: emptyDir
        mountPath: /tmp
        size: 1Gi
    envFrom:
    - secretRef:
        name: jackettio-env 
    - configMapRef:
        name: jackettio-env 
    resources:
      requests:
        cpu: 1m
        memory: 50Mi
        ephemeral-storage: 50Mi
      limits:
        cpu: 1
        memory: 512Mi
        ephemeral-storage: 1Gi        
    ingress:
      main:
        enabled: false
    service:
      main:
        enabled: true # necessary for probes
        ports:
          http:
            port: 4000
    initContainers:
      setup:
        image: ghcr.io/geek-cookbook/tooling:focal-20230624@sha256:3a43385968a692fd1ec02bffdea62ddb888e48cb3b883332aa98b1747f4a532b
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          set -x
          set -e

          # Clean up old torrents
          if [ -d "/config/torrents" ]; then
            rm -rf "/config/torrents"
            ln -sf /tmp '/config/torrents'
          fi

        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /tmp
          name: tmp        
    addons:
      vpn:
        enabled: true # in case we ever need it
        gluetun:
          image:
            repository: thrnz/docker-wireguard-pia
            tag: latest
        envFrom:
        - secretRef:
            name: jackettio-vpn
        env:
          IPTABLES_BACKEND: nft
          KILLSWITCH: "true"
          LOCAL_NETWORK: 10.0.0.0/8
          LOC: de-frankfurt
          PORT_FORWARDING: "0"
          PORT_PERSIST: "1"
          NFTABLES: "1"      
          VPNDNS: "0"  
        securityContext:
          runAsUser: 0
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
        config: # We have to set this to null so that we can override with our own config  