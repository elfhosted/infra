apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: discussio
  namespace: discussio
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: elfhosted
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: discussio
  values:
    global:
      nameOverride: discussio
    image:
      repository: ghcr.io/elfhosted/discussio
      tag: rolling@sha256:e9ca7fe07e1dc37e86d93fa3a0378b2a75b78b7502dd91132d403f1d94aee015
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      allowPrivilegeEscalation: false
      # runAsNonRoot: true
      capabilities:
        drop:
        - ALL        
    automountServiceAccountToken: false
    controller:
      replicas: 1
      strategy: Recreate
      annotations:
        configmap.reloader.stakater.com/reload: "discussio-env,discussio-env-dev-overrides"
        secret.reloader.stakater.com/reload: "discussio-env,discussio-env-dev-overrides"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution: 
        - weight: 100  
          podAffinityTerm:    
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - discussio
            topologyKey: "kubernetes.io/hostname"
    persistence:
      tmp: 
        enabled: true
        type: emptyDir
        mountPath: /tmp    
      deno:
        enabled: true
        type: custom
        mountPath: /deno
        volumeSpec:
          persistentVolumeClaim:
            claimName: discussio      
      shared:
        enabled: true
        type: emptyDir
        volumeSpec:
          medium: Memory                 
    resources:
      requests:
        cpu: 100m
        memory: 512Mi
        ephemeral-storage: 50Mi
      limits:
        cpu: 1 # never gets here because it's single-threaded
        memory: 2Gi
        ephemeral-storage: 1Gi     
    ingress:
      main:
        enabled: false
    service:
      main:
        enabled: true # necessary for probes
        ports:
          http:
            port: 7000
    # initContainers:
    #   setup-warp:
    #     image: ghcr.io/elfhosted/tooling:focal-20240530@sha256:458d1f3b54e9455b5cdad3c341d6853a6fdd75ac3f1120931ca3c09ac4b588de
    #     imagePullPolicy: IfNotPresent
    #     command:
    #     - /bin/bash
    #     - -c
    #     - |
    #       set -x

    #       cd /shared

    #       # Create cloudflare account
    #       wgcf register --accept-tos

    #       # Create gluetun config
    #       wgcf generate -p /shared/wg0.conf

    #       # grab the values from the profile and put them into env vars for gluetun to consume
    #       echo "export WIREGUARD_PRIVATE_KEY=$(grep PrivateKey /shared/wg0.conf | cut -f3 -d' ')" > /shared/env
    #       echo "export WIREGUARD_PUBLIC_KEY=$(grep PublicKey /shared/wg0.conf | cut -f3 -d' ')" >> /shared/env
    #       echo "export WIREGUARD_ADDRESSES=$(grep Address /shared/wg0.conf | grep '/32' | cut -f3 -d' ')" >> /shared/env

    #       echo "export VPN_ENDPOINT_IP=$(dig +short dig +short engage.cloudflareclient.com)" >> /shared/env

    #     volumeMounts:
    #     - mountPath: /shared
    #       name: shared
    #     securityContext:
    #       seccompProfile:
    #         type: RuntimeDefault
    #       readOnlyRootFilesystem: false       
    # addons:
    #   vpn:
    #     enabled: true # in case we ever need it
    #     gluetun:
    #       image:
    #         repository: ghcr.io/elfhosted/gluetun
    #         tag: 3.39.1@sha256:47688e70bd1519bcedaf48270328d85a5405496330787e53371d23fa590af4d3
    #     env:
    #       FIREWALL_OUTBOUND_SUBNETS: 10.0.0.0/8
    #       DNS_KEEP_NAMESERVER: "on"
    #       HTTP_CONTROL_SERVER_PORT: "8000"
    #       HTTP_CONTROL_SERVER_ADDRESS: ":8000"
    #       VPN_TYPE: wireguard
    #       VPN_SERVICE_PROVIDER: custom
    #       FIREWALL_INPUT_PORTS: 7000"
    #       WIREGUARD_MTU: "1280"
    #       VPN_ENDPOINT_PORT: "2408"
    #       DOT: "off"
    #     securityContext:
    #       runAsUser: 0
    #       capabilities:
    #         add:
    #           - NET_ADMIN
    #           - SYS_MODULE
    #     config: # We have to set this to null so that we can override with our own config
    #     volumeMounts:
    #     - mountPath: /shared
    #       name: shared        