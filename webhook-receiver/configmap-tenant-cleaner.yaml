apiVersion: v1
kind: ConfigMap
metadata:
  name: tenant-cleaner
  namespace: webhook-receiver
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
data:
  tenant-cleaner.sh: |
    #!/bin/bash

    # setup git
    git config --global user.name "Elfbot"
    git config --global user.email "elfbot@elfhosted.com"
    git config --global pull.rebase true

    # set -x
    # set -e

    gh auth setup-git

    TEMPDIR=$(mktemp -d)
    cd $TEMPDIR
    gh repo clone elfhosted/tenants

    git config --global --add safe.directory tenants
    cd tenants/fsn/

    BRANCH_NAME="tenant-cleaner"
    BASE_BRANCH="main"


    # Check out remote tracking branch
    git checkout -t "origin/$BRANCH_NAME"

    # Pull latest changes from main
    git pull origin "$BASE_BRANCH"

    ../scripts/process-all-customers.sh

    # clean out unused namespaces / kustomizations
    for TENANT in $(ls bootstrap/namespaces/namespace-*.yaml | cut -f2 -d- | cut -f1 -d.); do
      # Avoid null tenants
      if [[ ! "$TENANT" == "" ]]; then
        PVCs=$(kubectl get pvc -n aa-$TENANT)
        if [[ "$PVCs" == "" ]]; then
          # it's empty, we can delete it
          rm bootstrap/namespaces/namespace-$TENANT.yaml
          rm bootstrap/kustomizations/kustomization-$TENANT.yaml
          rm -rf tenants/$TENANT
        fi
      fi
    done

    DATE=$(date +"%Y-%m-%d")

    echo $DATE > date.txt

    # Check if branch has diverged from base
    git fetch origin "$BASE_BRANCH"
    if git diff --quiet "origin/$BASE_BRANCH" "$BRANCH_NAME"; then
      echo "No changes to commit or push."
      exit 0
    fi

    # Stage and commit
    git pull origin "$BRANCH_NAME"
    git add .
    if ! git diff --cached --quiet; then
      git commit -m "Tenant Cleaner cleans tenants on $DATE"
    fi

    # Push the branch (creates it remotely if needed)
    git push -u origin "$BRANCH_NAME"

    # Check if PR already exists
    existing_pr=$(gh pr list --head "$BRANCH_NAME" --base "$BASE_BRANCH" --state open --json number --jq '.[0].number')

    if [ -n "$existing_pr" ]; then
      echo "Pull request #$existing_pr already exists."
    else
      gh pr create --title "Tenant Cleaner" --body "Tenant Cleaner" --base "$BASE_BRANCH" --head "$BRANCH_NAME" --assignee funkypenguin
    fi

    # Don't need to do this since wordpress will delete inactive users after 30 days
    # # Clean out backups
    # s5cmd ls s3://elfhosted-tenants/volsync/backup/ | awk '{print $2}' | while read -r tenant; do
    #     # Skip empty lines
    #     [ -z "$tenant" ] && continue

    #     # Strip trailing slash and 'aa-' prefix
    #     FULL_TENANT=$(basename "${tenant%/}")    # Remove trailing slash and get basename
    #     TENANT="${FULL_TENANT#aa-}"              # Strip 'aa-' prefix

    #     # Sanity check: skip if result is empty or unchanged (meaning bad/missing prefix)
    #     if [ -z "$TENANT" ] || [ "$TENANT" = "$FULL_TENANT" ]; then
    #         echo "‚ö†Ô∏è  Skipping invalid or empty tenant: '$FULL_TENANT'"
    #         continue
    #     fi

    #     echo "üîç Checking tenant: $TENANT"

    #     if find $TEMPDIR/tenants -type d -name "$TENANT" | grep -q .; then
    #         echo "‚úÖ Tenant $TENANT exists locally ‚Äî skipping"
    #     else
    #         echo "üóëÔ∏è  Tenant $TENANT not found locally ‚Äî deleting from S3"

    #         echo s5cmd rm s3://elfhosted-tenants/volsync/backup/$FULL_TENANT/*
    #         echo s5cmd rm s3://elfhosted-tenants/volsync/config/$FULL_TENANT/*
    #         echo s5cmd rm s3://elfhosted-tenants/volsync/symlinks/$FULL_TENANT/*
    #     fi
    # done
    # sleep 1h # for debug


