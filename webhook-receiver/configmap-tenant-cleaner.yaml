apiVersion: v1
kind: ConfigMap
metadata:
  name: tenant-cleaner
  namespace: webhook-receiver
data:
  tenant-cleaner.sh: |
    #!/bin/bash

    # time to debug
    sleep 1h

    # setup git
    git config --global user.name "Elfbot"
    git config --global user.email "elfbot@elfhosted.com"
    git config --global pull.rebase true

    # Get rclone on first startup, if we don't have it
    if [[ ! -f /tmp/rclone ]]; then
        cd /tmp
        curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip
        unzip rclone-current-linux-amd64.zip
        mv rclone-*-linux-amd64/rclone /tmp/
    fi

    # set -x
    # set -e

    gh auth setup-git

    TEMPDIR=$(mktemp -d)
    cd $TEMPDIR
    gh repo clone elfhosted/tenants -- --depth=1
    git config --global --add safe.directory tenants
    cd tenants/fsn/

    ../scripts/process-all-customers.sh

    # clean out unused namespaces / kustomizations
    for TENANT in $(ls bootstrap/namespaces/namespace-*.yaml | cut -f2 -d- | cut -f1 -d.); do
      # Avoid null tenants
      if [[ ! "$TENANT" == "" ]]; then
        PVCs=$(kubectl get pvc -n aa-${TENANT})
        if [[ "$PVCs" == "" ]]; then
          # it's empty, we can delete it
          rm bootstrap/namespaces/namespace-$TENANT.yaml
          rm bootstrap/kustomizations/kustomization-$TENANT.yaml
          rm -rf tenants/$TENANT
        fi
      fi
    done
    
    DATE=$(date +"%Y-%m-%d")
    git checkout -b clean-kustomizations origin/clean-kustomizations-$DATE || git checkout -b clean-kustomizations-$DATE
    git pull
    git add .
    git commit -m "Tenant cleaner cleans tenants on $DATE" .

    git push --set-upstream origin clean-kustomizations-$DATE
    gh pr create --title 'Tenant cleaner cleans up on $DATE!' --base main --body 'Tenant cleaner cleans up!' --assignee funkypenguin