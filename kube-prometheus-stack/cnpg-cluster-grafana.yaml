apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: grafana
  namespace: kube-prometheus-stack
spec:
  instances: 3

  # Example of rolling update strategy:
  # - unsupervised: automated update of the primary once all
  #                 replicas have been upgraded (default)
  # - supervised: requires manual supervision to perform
  #               the switchover of the primary
  primaryUpdateStrategy: unsupervised

  storage:
    storageClass: topolvm-provisioner-thin
    size: 10Gi

  resources:
    requests:
      cpu: "50m"
      memory: 128Mi
    limits:
      cpu: "1"
      memory: 1Gi
      
  monitoring:
    enablePodMonitor: true
                
  # This is a lightweight but important database, run it on control-plane nodes
  affinity:
    podAntiAffinityType: required
    tolerations:
    - key: node-role.kubernetes.io/control-plane
      operator: "Exists"
    nodeSelector:
      node-role.kubernetes.io/control-plane: "true"

  superuserSecret:
      name: cnpg-postgres-credentials

  bootstrap:
    initdb:
      database: grafana
      owner: grafana
      secret:
        name: app-secret

  backup:
      # Volume snapshot backups
      volumeSnapshot:
        className: topolvm-provisioner-thin
      # WAL archive
      barmanObjectStore:        
        destinationPath: s3://cnpg/
        endpointURL: "http://minio.minio:9000"
        s3Credentials:
          accessKeyId:
            name: cnpg-minio-credentials
            key: ACCESS_KEY_ID
          secretAccessKey:
            name: cnpg-minio-credentials
            key: ACCESS_SECRET_KEY
        wal:
          compression: gzip
          maxParallel: 1
          retentionPolicy: "7d"