apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: grafana
  namespace: kube-prometheus-stack
spec:
  instances: 3

  # Example of rolling update strategy:
  # - unsupervised: automated update of the primary once all
  #                 replicas have been upgraded (default)
  # - supervised: requires manual supervision to perform
  #               the switchover of the primary
  primaryUpdateStrategy: unsupervised

  storage:
    storageClass: topolvm-provisioner-thin
    size: 5Gi

  resources:
    requests:
      cpu: "1"
      memory: 4Gi
    limits:
      cpu: "2"
      memory: 8Gi
      
  monitoring:
    enablePodMonitor: true
                
  affinity:
    podAntiAffinityType: required
    tolerations:
    - key: "node-role.${dns_domain}/observability"
      operator: "Exists"
    nodeSelector:
      node-role.${dns_domain}/observability: "true"
      

  superuserSecret:
      name: cnpg-postgres-credentials

  bootstrap:
    # initdb:
    #   database: grafana
    #   owner: grafana
    #   secret:
    #     name: app-secret

    recovery:
      backup: 
        name: backup-grafana-20240709000000            

  # backup:
  #     # Volume snapshot backups
  #     volumeSnapshot:
  #       className: ceph-block
  #     # WAL archive
  #     barmanObjectStore:        
  #       destinationPath: s3://cnpg/
  #       endpointURL: "http://minio.minio:9000"
  #       s3Credentials:
  #         accessKeyId:
  #           name: cnpg-minio-credentials
  #           key: ACCESS_KEY_ID
  #         secretAccessKey:
  #           name: cnpg-minio-credentials
  #           key: ACCESS_SECRET_KEY
  #       wal:
  #         compression: gzip
  #         maxParallel: 2      