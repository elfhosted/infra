apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cloudflare-exporter
  namespace: cloudflare-exporter
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: cloudflare-exporter
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: cloudflare-exporter
  values:
    # Default values for cloudflare-exporter.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    replicaCount: 2

    image:
      repository: ghcr.io/lablabs/cloudflare_exporter
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      # tag: latest
    env: []
    secretRef: "cloudflare-exporter-env"
    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    podAnnotations: {}

    deploymentAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: ClusterIP
      port: 8080
      annotations: {}
      addPrometheusScrapeAnnotation: true

    serviceAccount:
      # Whether to create service account
      create: false
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    serviceMonitor:
      # When set true then use a ServiceMonitor to configure scraping
      enabled: true
      # Set the namespace the ServiceMonitor should be deployed, if empty namespace will be .Release.Namespace
      namespace: ""
      # Service monitor labels
      labels: {}
      # Set how frequently Prometheus should scrape
      interval: 30s
      # Set path to redis-exporter telemtery-path
      telemetryPath: /metrics
      # Set timeout for scrape
      timeout: 10s
      # Set relabel_configs as per https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
      relabelings: []
      # Set of labels to transfer on the Kubernetes Service onto the target.
      targetLabels: []
      metricRelabelings: []

    resources: 
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}